{
  "openapi": "3.1.0",
  "info": {
    "title": "Fennec ASR",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/transcribe/url": {
      "post": {
        "summary": "Create Transcription Job From Url",
        "operationId": "create_transcription_job_from_url_api_v1_transcribe_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/transcribe": {
      "post": {
        "summary": "Create Transcription Job",
        "description": "Accept an audio file, stream it into GridFS (async), and queue a job\nwith the resulting GridFS file ID (as a string).",
        "operationId": "create_transcription_job_api_v1_transcribe_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_transcription_job_api_v1_transcribe_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/transcribe/status/{job_id}": {
      "get": {
        "summary": "Get Transcription Status",
        "operationId": "get_transcription_status_api_v1_transcribe_status__job_id__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "description": "A simple root endpoint to confirm the API is running.",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_create_transcription_job_api_v1_transcribe_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "apply_contextual_correction": {
            "type": "boolean",
            "title": "Apply Contextual Correction",
            "default": false
          },
          "formatting": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formatting",
            "description": "A JSON string of FormattingOptions, e.g., '{\"newline_pause_threshold\": 0.8}'."
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_create_transcription_job_api_v1_transcribe_post"
      },
      "FormattingOptions": {
        "properties": {
          "newline_pause_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newline Pause Threshold",
            "description": "Insert a single newline if the pause between words exceeds this duration (in seconds).",
            "examples": [0.8]
          },
          "double_newline_pause_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Double Newline Pause Threshold",
            "description": "Insert a double newline if the pause between words exceeds this duration (in seconds).",
            "examples": [1.5]
          }
        },
        "type": "object",
        "title": "FormattingOptions",
        "description": "Defines formatting options for the final transcript based on pause lengths."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TranscriptionJob": {
        "properties": {
          "job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Job Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "queued"
          },
          "detail": {
            "type": "string",
            "title": "Detail",
            "default": "Your transcription job has been successfully queued."
          }
        },
        "type": "object",
        "required": [
          "job_id"
        ],
        "title": "TranscriptionJob",
        "description": "Response model when a non-streaming job is successfully queued."
      },
      "TranscriptionRequest": {
        "properties": {
          "audio": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string"
              }
            ],
            "title": "Audio",
            "description": "A publicly accessible URL to an audio file OR a base64-encoded data URI.",
            "examples": [
              "https://filesamples.com/samples/audio/mp3/sample-3.mp3",
              "data:audio/mp3;base64,SUQz..."
            ]
          },
          "context": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Optional context to guide the ASR model. Doubles cost and increases latency."
          },
          "formatting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormattingOptions"
              },
              {
                "type": "null"
              }
            ],
            "description": "Rules for applying formatting to the final transcript based on detected pauses."
          },
          "apply_contextual_correction": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Contextual Correction",
            "description": "If true, performs an additional AI pass to correct contextual errors. Requires 'context' to be effective.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "TranscriptionRequest",
        "description": "Defines the request body for the non-streaming transcription endpoint.\nAccepts an audio source as a URL or a data URI."
      },
      "TranscriptionStatusResponse": {
        "properties": {
          "job_id": {
            "type": "string",
            "format": "uuid",
            "title": "Job Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "transcript": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcript"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "status",
          "created_at"
        ],
        "title": "TranscriptionStatusResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}